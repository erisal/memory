{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","initialCards","id","name","value","clicked","useState","cards","setCards","score","setScore","highScore","setHighSchore","resetBoard","increaseScore","className","newOrder","cardsCopy","length","rdmIndex","Math","floor","random","push","splice","randomer","map","card","style","backgroundColor","onClick","newCards","toReset","console","log","cardClicked","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.07e2c464.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport React, { useState, useEffect } from 'react'; \n\nconst App = () => {\n  const cardDisplayCount = 9;\n  const initialCards = [\n    {\n      id: '01',\n      name: 'turquoise',\n      value: '#00ffff',\n      clicked: false,\n    },\n    {\n      id: '02',\n      name: 'tomato',\n      value: '#ff6347',\n      clicked: false,\n    },\n    {\n      id: '03',\n      name: 'light gray',\n      value: '#d3d3d3',\n      clicked: false,\n    },\n    {\n      id: '04',\n      name: 'orange red',\n      value: '#ff4500',\n      clicked: false,\n    },\n    {\n      id: '05',\n      name: 'orchid',\n      value: '#da70d6',\n      clicked: false,\n    },\n    {\n      id: '06',\n      name: 'lime green',\n      value: '#32cd32',\n      clicked: false,\n    },\n    {\n      id: '07',\n      name: 'fuchsia',\n      value: '#ff00ff',\n      clicked: false,\n    },\n    {\n      id: '08',\n      name: 'purple',\n      value: '#800080',\n      clicked: false,\n    },\n    {\n      id: '09',\n      name: 'slate blue',\n      value: '#6a5acd',\n      clicked: false,\n    },\n    {\n      id: '10',\n      name: 'steel blue',\n      value: '#4682b4',\n      clicked: false,\n    },\n    {\n      id: '11',\n      name: 'brown',\n      value: '#a52a2a',\n      clicked: false,\n    },\n    {\n      id: '12',\n      name: 'black',\n      value: '#000000',\n      clicked: false,\n    },\n    {\n      id: '13',\n      name: 'midnight blue',\n      value: '#191970',\n      clicked: false,\n    },\n    {\n      id: '14',\n      name: 'olive drab',\n      value: '#6b8e23',\n      clicked: false,\n    },\n    {\n      id: '15',\n      name: 'hot pink',\n      value: '#ff69b4',\n      clicked: false,\n    },\n    {\n      id: '16',\n      name: 'indigo',\n      value: '#4b0082',\n      clicked: false,\n    },\n    {\n      id: '17',\n      name: 'khaki',\n      value: '#f0e68c',\n      clicked: false,\n    },\n    {\n      id: '18',\n      name: 'white',\n      value: '#ffffff',\n      clicked: false,\n    },\n    {\n      id: '19',\n      name: 'navy',\n      value: '#000080',\n      clicked: false,\n    },\n    {\n      id: '20',\n      name: 'orange',\n      value: '#ffa500',\n      clicked: false,\n    },\n\n  ];\n  const [cards, setCards] = useState(initialCards);\n  const [score, setScore] = useState(0);\n  const [highScore, setHighSchore] = useState(0);\n\n\n\n  const randomer = () => {\n    let newOrder = [];\n    let cardsCopy = [...cards];\n    while (newOrder.length < cardDisplayCount) {\n      let rdmIndex = Math.floor(Math.random() * Math.floor(cardsCopy.length))\n      newOrder.push(cardsCopy[rdmIndex]);\n      cardsCopy.splice(rdmIndex, 1);\n    }\n    return newOrder;\n  }\n\n  const cardClicked = (id) => {\n    let newCards = [];\n    let toReset = false;\n    cards.map((card) => {\n      if (card.id === id && card.clicked) {\n          console.log('got to first')\n          toReset = true;\n        }\n\n      else {\n        if (card.id === id) {\n        increaseScore();\n        newCards.push(\n          {\n            id: card.id,\n            name: card.name,\n            value: card.value,\n            clicked: true,\n          }\n        )\n       }\n        else { newCards.push(card) }\n    }\n      \n    })\n    if (toReset) {\n      resetBoard();\n    }\n    else setCards(newCards);\n      \n  }\n\n  const resetBoard = () => {\n\n    setCards(initialCards);\n    \n    if (score > highScore) {\n      setHighSchore(score);\n    }\n    setScore(0);\n\n  }\n\n  const increaseScore = () => {\n    setScore(score + 1);\n    \n  }\n\n  return (\n    <div className=\"App\">\n      <div id=\"scoreboard\">\n        <div id=\"currentScore\">Score: {score}</div>\n        <div id=\"highScore\">High Score: {highScore}</div>\n      </div>\n      <div id=\"cardsContainer\">\n      {\n        \n        randomer().map((card) => \n            <div className='cardHolder' key={card.id} id={card.id} style={{\n              backgroundColor: card.value,              \n              }} onClick={() => cardClicked(card.id)}>{card.name}\n              </div>\n        )\n      }\n    </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}