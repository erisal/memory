{"ast":null,"code":"var _jsxFileName = \"/home/erik/the_odin_project/memory/src/App.js\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  const cardDisplayCount = 3;\n  const cards = [{\n    id: '01',\n    name: 'turquoise',\n    value: '#00ffff',\n    clicked: false\n  }, {\n    id: '02',\n    name: 'tomato',\n    value: '#ff6347',\n    clicked: false\n  }, {\n    id: '03',\n    name: 'light gray',\n    value: '#d3d3d3',\n    clicked: false\n  }, {\n    id: '04',\n    name: 'orange red',\n    value: '#ff4500',\n    clicked: false\n  }, {\n    id: '05',\n    name: 'orchid',\n    value: '#da70d6',\n    clicked: false\n  }];\n\n  const randomer = () => {\n    let newOrder = [];\n    let cardsCopy = [...cards];\n\n    while (newOrder.length < cardDisplayCount) {\n      let rdmIndex = Math.floor(Math.random() * Math.floor(cardsCopy.length));\n      newOrder.push(cardsCopy[rdmIndex]);\n      cardsCopy.splice(rdmIndex, 1);\n    }\n\n    return newOrder;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"cardsContainer\",\n      children: randomer().map(card => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cardHolder\",\n        id: card.id,\n        style: {\n          backgroundColor: card.value,\n          width: '200px',\n          height: '200px'\n        },\n        children: [card.name, \" - \", card.id, \" - clicked: \", card.clicked]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/erik/the_odin_project/memory/src/App.js"],"names":["React","useState","useEffect","App","cardDisplayCount","cards","id","name","value","clicked","randomer","newOrder","cardsCopy","length","rdmIndex","Math","floor","random","push","splice","map","card","backgroundColor","width","height"],"mappings":";;AACA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChB,QAAMC,gBAAgB,GAAG,CAAzB;AACA,QAAMC,KAAK,GAAG,CACZ;AACEC,IAAAA,EAAE,EAAE,IADN;AAEEC,IAAAA,IAAI,EAAE,WAFR;AAGEC,IAAAA,KAAK,EAAE,SAHT;AAIEC,IAAAA,OAAO,EAAE;AAJX,GADY,EAOZ;AACEH,IAAAA,EAAE,EAAE,IADN;AAEEC,IAAAA,IAAI,EAAE,QAFR;AAGEC,IAAAA,KAAK,EAAE,SAHT;AAIEC,IAAAA,OAAO,EAAE;AAJX,GAPY,EAaZ;AACEH,IAAAA,EAAE,EAAE,IADN;AAEEC,IAAAA,IAAI,EAAE,YAFR;AAGEC,IAAAA,KAAK,EAAE,SAHT;AAIEC,IAAAA,OAAO,EAAE;AAJX,GAbY,EAmBZ;AACEH,IAAAA,EAAE,EAAE,IADN;AAEEC,IAAAA,IAAI,EAAE,YAFR;AAGEC,IAAAA,KAAK,EAAE,SAHT;AAIEC,IAAAA,OAAO,EAAE;AAJX,GAnBY,EAyBZ;AACEH,IAAAA,EAAE,EAAE,IADN;AAEEC,IAAAA,IAAI,EAAE,QAFR;AAGEC,IAAAA,KAAK,EAAE,SAHT;AAIEC,IAAAA,OAAO,EAAE;AAJX,GAzBY,CAAd;;AAgCA,QAAMC,QAAQ,GAAG,MAAM;AACrB,QAAIC,QAAQ,GAAG,EAAf;AACA,QAAIC,SAAS,GAAG,CAAC,GAAGP,KAAJ,CAAhB;;AACA,WAAOM,QAAQ,CAACE,MAAT,GAAkBT,gBAAzB,EAA2C;AACzC,UAAIU,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBF,IAAI,CAACC,KAAL,CAAWJ,SAAS,CAACC,MAArB,CAA3B,CAAf;AACAF,MAAAA,QAAQ,CAACO,IAAT,CAAcN,SAAS,CAACE,QAAD,CAAvB;AACAF,MAAAA,SAAS,CAACO,MAAV,CAAiBL,QAAjB,EAA2B,CAA3B;AACD;;AACD,WAAOH,QAAP;AACD,GATD;;AAaA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAK,MAAA,EAAE,EAAC,gBAAR;AAAA,gBAGED,QAAQ,GAAGU,GAAX,CAAgBC,IAAD,iBACX;AAAK,QAAA,SAAS,EAAC,YAAf;AAA4B,QAAA,EAAE,EAAEA,IAAI,CAACf,EAArC;AAAyC,QAAA,KAAK,EAAE;AAC9CgB,UAAAA,eAAe,EAAED,IAAI,CAACb,KADwB;AAE9Ce,UAAAA,KAAK,EAAE,OAFuC;AAG9CC,UAAAA,MAAM,EAAE;AAHsC,SAAhD;AAAA,mBAKOH,IAAI,CAACd,IALZ,SAKqBc,IAAI,CAACf,EAL1B,kBAK0Ce,IAAI,CAACZ,OAL/C;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAHF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CAjED;;KAAMN,G;AAmEN,eAAeA,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport React, { useState, useEffect } from 'react'; \n\nconst App = () => {\n  const cardDisplayCount = 3;\n  const cards = [\n    {\n      id: '01',\n      name: 'turquoise',\n      value: '#00ffff',\n      clicked: false,\n    },\n    {\n      id: '02',\n      name: 'tomato',\n      value: '#ff6347',\n      clicked: false,\n    },\n    {\n      id: '03',\n      name: 'light gray',\n      value: '#d3d3d3',\n      clicked: false,\n    },\n    {\n      id: '04',\n      name: 'orange red',\n      value: '#ff4500',\n      clicked: false,\n    },\n    {\n      id: '05',\n      name: 'orchid',\n      value: '#da70d6',\n      clicked: false,\n    }\n  ];\n  const randomer = () => {\n    let newOrder = [];\n    let cardsCopy = [...cards];\n    while (newOrder.length < cardDisplayCount) {\n      let rdmIndex = Math.floor(Math.random() * Math.floor(cardsCopy.length))\n      newOrder.push(cardsCopy[rdmIndex]);\n      cardsCopy.splice(rdmIndex, 1);\n    }\n    return newOrder;\n  }\n\n\n\n  return (\n    <div className=\"App\">\n      <div id=\"cardsContainer\">\n      {\n        \n        randomer().map((card) => \n            <div className='cardHolder' id={card.id} style={{\n              backgroundColor: card.value,\n              width: '200px',\n              height: '200px',\n              \n              }} >{card.name} - {card.id} - clicked: {card.clicked}\n              </div>\n        )\n      }\n    </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}